# Cero3 Shaper
# A cake shaper and AQM solution that allows several diffserv marking schemes
# for ethernet gateways

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
#       Copyright (C) 2012-5 Michael D. Taht, Toke Høiland-Jørgensen, Sebastian Moeller



. ${SQM_LIB_DIR}/defaults.sh
QDISC=cake


# Default traffic classification is passed in INGRESS_CAKE_OPTS and EGRESS_CAKE_OPTS, defined in defaults.sh now


egress() {
    SILENT=1 $TC qdisc del dev $IFACE root
    $TC qdisc add dev $IFACE root $( get_stab_string ) cake \
        bandwidth ${UPLINK}kbit $( get_cake_lla_string ) ${EGRESS_CAKE_OPTS} ${EQDISC_OPTS}
}


ingress() {

    SILENT=1 $TC qdisc del dev $IFACE handle ffff: ingress
    $TC qdisc add dev $IFACE handle ffff: ingress

    SILENT=1 $TC qdisc del dev $DEV root

    [ "$IGNORE_DSCP_INGRESS" -eq "1" ] && INGRESS_CAKE_OPTS="$INGRESS_CAKE_OPTS besteffort"
    [ "$ZERO_DSCP_INGRESS" -eq "1" ] && INGRESS_CAKE_OPTS="$INGRESS_CAKE_OPTS wash"

    $TC qdisc add dev $DEV root $( get_stab_string ) cake \
        bandwidth ${DOWNLINK}kbit $( get_cake_lla_string ) ${INGRESS_CAKE_OPTS} ${IQDISC_OPTS}

    $IP link set dev $DEV up

    # Redirect ingress traffic from WAN to IFB and restore DSCP from conntrack
    $TC filter add dev $IFACE parent ffff: protocol all matchall \
    action ctinfo dscp 63 128 mirred egress redirect dev $DEV

}

setup_nftables() {
    nft -f - <<EOF
add table inet sqm_dscp
delete table inet sqm_dscp
add table inet sqm_dscp
add chain inet sqm_dscp sqm_dscp { type filter hook forward priority 0; policy accept; }
add rule inet sqm_dscp sqm_dscp ct mark set ip dscp or 128 counter
add rule inet sqm_dscp sqm_dscp ct mark set ip6 dscp or 128 counter
EOF
}

cleanup_nftables() {
    nft -f - <<EOF
delete table inet sqm_dscp
EOF
}

sqm_prepare_script() {
    do_modules
    verify_qdisc $QDISC "cake" || return 1
    setup_nftables
}

sqm_cleanup_script() {
    cleanup_nftables
}

sqm_cleanup() {
    local silent
    silent=${1:-0}

    # undo accumulated ipt commands during shutdown
    ipt_log_rewind

    [ -n "$CUR_IFB" ] || return 0

    SILENT=$silent $IP link delete dev ${CUR_IFB} type ifb
    sqm_debug "${0}: ${CUR_IFB} interface deleted"

    sqm_cleanup_script
}

sqm_stop() {
    [ "${DOWNLINK}" -ne 0 ] && $TC qdisc del dev $IFACE ingress
    $TC qdisc del dev $IFACE root

    sqm_cleanup
}